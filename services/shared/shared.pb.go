// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/shared/shared.proto

package shared

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FinancialAccount struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ItemId               int64    `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	PlaidAccountId       string   `protobuf:"bytes,4,opt,name=plaid_account_id,json=plaidAccountId,proto3" json:"plaid_account_id,omitempty"`
	CurrentBalance       float64  `protobuf:"fixed64,5,opt,name=current_balance,json=currentBalance,proto3" json:"current_balance,omitempty"`
	AccountName          string   `protobuf:"bytes,6,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	OfficialName         string   `protobuf:"bytes,7,opt,name=official_name,json=officialName,proto3" json:"official_name,omitempty"`
	AccountType          string   `protobuf:"bytes,8,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
	AccountSubtype       string   `protobuf:"bytes,9,opt,name=account_subtype,json=accountSubtype,proto3" json:"account_subtype,omitempty"`
	AccountMask          string   `protobuf:"bytes,10,opt,name=account_mask,json=accountMask,proto3" json:"account_mask,omitempty"`
	Selected             bool     `protobuf:"varint,11,opt,name=selected,proto3" json:"selected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinancialAccount) Reset()         { *m = FinancialAccount{} }
func (m *FinancialAccount) String() string { return proto.CompactTextString(m) }
func (*FinancialAccount) ProtoMessage()    {}
func (*FinancialAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_a31f9ef3b942022a, []int{0}
}

func (m *FinancialAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinancialAccount.Unmarshal(m, b)
}
func (m *FinancialAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinancialAccount.Marshal(b, m, deterministic)
}
func (m *FinancialAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinancialAccount.Merge(m, src)
}
func (m *FinancialAccount) XXX_Size() int {
	return xxx_messageInfo_FinancialAccount.Size(m)
}
func (m *FinancialAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_FinancialAccount.DiscardUnknown(m)
}

var xxx_messageInfo_FinancialAccount proto.InternalMessageInfo

func (m *FinancialAccount) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FinancialAccount) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *FinancialAccount) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *FinancialAccount) GetPlaidAccountId() string {
	if m != nil {
		return m.PlaidAccountId
	}
	return ""
}

func (m *FinancialAccount) GetCurrentBalance() float64 {
	if m != nil {
		return m.CurrentBalance
	}
	return 0
}

func (m *FinancialAccount) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *FinancialAccount) GetOfficialName() string {
	if m != nil {
		return m.OfficialName
	}
	return ""
}

func (m *FinancialAccount) GetAccountType() string {
	if m != nil {
		return m.AccountType
	}
	return ""
}

func (m *FinancialAccount) GetAccountSubtype() string {
	if m != nil {
		return m.AccountSubtype
	}
	return ""
}

func (m *FinancialAccount) GetAccountMask() string {
	if m != nil {
		return m.AccountMask
	}
	return ""
}

func (m *FinancialAccount) GetSelected() bool {
	if m != nil {
		return m.Selected
	}
	return false
}

type FinancialInstitution struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	InstitutionName      string   `protobuf:"bytes,2,opt,name=institution_name,json=institutionName,proto3" json:"institution_name,omitempty"`
	InstitutionColor     string   `protobuf:"bytes,3,opt,name=institution_color,json=institutionColor,proto3" json:"institution_color,omitempty"`
	InstitutionLogo      string   `protobuf:"bytes,4,opt,name=institution_logo,json=institutionLogo,proto3" json:"institution_logo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinancialInstitution) Reset()         { *m = FinancialInstitution{} }
func (m *FinancialInstitution) String() string { return proto.CompactTextString(m) }
func (*FinancialInstitution) ProtoMessage()    {}
func (*FinancialInstitution) Descriptor() ([]byte, []int) {
	return fileDescriptor_a31f9ef3b942022a, []int{1}
}

func (m *FinancialInstitution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinancialInstitution.Unmarshal(m, b)
}
func (m *FinancialInstitution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinancialInstitution.Marshal(b, m, deterministic)
}
func (m *FinancialInstitution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinancialInstitution.Merge(m, src)
}
func (m *FinancialInstitution) XXX_Size() int {
	return xxx_messageInfo_FinancialInstitution.Size(m)
}
func (m *FinancialInstitution) XXX_DiscardUnknown() {
	xxx_messageInfo_FinancialInstitution.DiscardUnknown(m)
}

var xxx_messageInfo_FinancialInstitution proto.InternalMessageInfo

func (m *FinancialInstitution) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FinancialInstitution) GetInstitutionName() string {
	if m != nil {
		return m.InstitutionName
	}
	return ""
}

func (m *FinancialInstitution) GetInstitutionColor() string {
	if m != nil {
		return m.InstitutionColor
	}
	return ""
}

func (m *FinancialInstitution) GetInstitutionLogo() string {
	if m != nil {
		return m.InstitutionLogo
	}
	return ""
}

type Transaction struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ItemId               int64    `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	AccountId            int64    `protobuf:"varint,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CategoryId           int64    `protobuf:"varint,5,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	PlaidCategoryId      string   `protobuf:"bytes,6,opt,name=plaid_category_id,json=plaidCategoryId,proto3" json:"plaid_category_id,omitempty"`
	PlaidTransactionId   string   `protobuf:"bytes,7,opt,name=plaid_transaction_id,json=plaidTransactionId,proto3" json:"plaid_transaction_id,omitempty"`
	Name                 string   `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Amount               float64  `protobuf:"fixed64,9,opt,name=amount,proto3" json:"amount,omitempty"`
	Date                 string   `protobuf:"bytes,10,opt,name=date,proto3" json:"date,omitempty"`
	Pending              bool     `protobuf:"varint,11,opt,name=pending,proto3" json:"pending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_a31f9ef3b942022a, []int{2}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Transaction) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Transaction) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *Transaction) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Transaction) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *Transaction) GetPlaidCategoryId() string {
	if m != nil {
		return m.PlaidCategoryId
	}
	return ""
}

func (m *Transaction) GetPlaidTransactionId() string {
	if m != nil {
		return m.PlaidTransactionId
	}
	return ""
}

func (m *Transaction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Transaction) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Transaction) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Transaction) GetPending() bool {
	if m != nil {
		return m.Pending
	}
	return false
}

func init() {
	proto.RegisterType((*FinancialAccount)(nil), "shared.FinancialAccount")
	proto.RegisterType((*FinancialInstitution)(nil), "shared.FinancialInstitution")
	proto.RegisterType((*Transaction)(nil), "shared.Transaction")
}

func init() { proto.RegisterFile("services/shared/shared.proto", fileDescriptor_a31f9ef3b942022a) }

var fileDescriptor_a31f9ef3b942022a = []byte{
	// 504 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x55, 0xd2, 0xdd, 0x7e, 0x4c, 0x97, 0xb6, 0x6b, 0xad, 0x20, 0x42, 0x20, 0x4a, 0x39, 0x50,
	0x40, 0xbb, 0x45, 0xe2, 0x0f, 0x40, 0x57, 0x42, 0x8a, 0x04, 0x1c, 0xc2, 0x9e, 0xb8, 0x54, 0xae,
	0x3d, 0x9b, 0x5a, 0x9b, 0xd8, 0x91, 0xed, 0x80, 0xfa, 0x93, 0xf8, 0x25, 0xfc, 0x27, 0x4e, 0xc8,
	0x76, 0xda, 0x66, 0x0b, 0x17, 0x4e, 0xc9, 0xbc, 0xf7, 0xf4, 0x3c, 0xe3, 0x79, 0x86, 0x27, 0x06,
	0xf5, 0x77, 0xc1, 0xd0, 0x2c, 0xcc, 0x86, 0x6a, 0xe4, 0xcd, 0xe7, 0xaa, 0xd2, 0xca, 0x2a, 0xd2,
	0x0d, 0xd5, 0xec, 0x77, 0x0c, 0x93, 0x8f, 0x42, 0x52, 0xc9, 0x04, 0x2d, 0x3e, 0x30, 0xa6, 0x6a,
	0x69, 0xc9, 0x08, 0x62, 0xc1, 0x93, 0x68, 0x1a, 0xcd, 0x3b, 0x59, 0x2c, 0x38, 0x79, 0x04, 0xbd,
	0xda, 0xa0, 0x5e, 0x09, 0x9e, 0xc4, 0x1e, 0xec, 0xba, 0x32, 0xf5, 0x84, 0xb0, 0x58, 0x3a, 0xa2,
	0x13, 0x08, 0x57, 0xa6, 0x9c, 0xcc, 0x61, 0x52, 0x15, 0x54, 0xf0, 0x15, 0x0d, 0x96, 0x4e, 0x71,
	0x32, 0x8d, 0xe6, 0x83, 0x6c, 0xe4, 0xf1, 0xe6, 0xa4, 0x94, 0x93, 0x97, 0x30, 0x66, 0xb5, 0xd6,
	0x28, 0xed, 0x6a, 0x4d, 0x0b, 0x2a, 0x19, 0x26, 0xa7, 0xd3, 0x68, 0x1e, 0x65, 0xa3, 0x06, 0x5e,
	0x06, 0x94, 0x3c, 0x87, 0xb3, 0x9d, 0x99, 0xa4, 0x25, 0x26, 0x5d, 0x6f, 0x37, 0x6c, 0xb0, 0x2f,
	0xb4, 0x44, 0xf2, 0x02, 0x1e, 0xa8, 0xdb, 0x5b, 0xe1, 0x46, 0x09, 0x9a, 0x9e, 0xd7, 0x9c, 0xed,
	0x40, 0x2f, 0x6a, 0xf9, 0xd8, 0x6d, 0x85, 0x49, 0xff, 0x9e, 0xcf, 0xcd, 0xb6, 0x42, 0xd7, 0xd3,
	0x4e, 0x62, 0xea, 0xb5, 0x57, 0x0d, 0x42, 0xf3, 0x0d, 0xfc, 0x35, 0xa0, 0x6d, 0xaf, 0x92, 0x9a,
	0xbb, 0x04, 0xee, 0x79, 0x7d, 0xa6, 0xe6, 0x8e, 0x3c, 0x86, 0xbe, 0xc1, 0x02, 0x99, 0x45, 0x9e,
	0x0c, 0xa7, 0xd1, 0xbc, 0x9f, 0xed, 0xeb, 0xd9, 0xcf, 0x08, 0x2e, 0xf6, 0x97, 0x9f, 0x4a, 0x63,
	0x85, 0xad, 0xad, 0x50, 0xf2, 0xaf, 0x05, 0xbc, 0x82, 0x89, 0x38, 0xd0, 0x61, 0xb6, 0xd8, 0x9f,
	0x35, 0x6e, 0xe1, 0x7e, 0xbc, 0x37, 0x70, 0xde, 0x96, 0x32, 0x55, 0x28, 0xed, 0x97, 0x33, 0xc8,
	0xda, 0x1e, 0xd7, 0x0e, 0x3f, 0xf6, 0x2d, 0x54, 0xae, 0x9a, 0x35, 0xb5, 0x7d, 0x3f, 0xa9, 0x5c,
	0xcd, 0x7e, 0xc5, 0x30, 0xbc, 0xd1, 0x54, 0x1a, 0xca, 0xfe, 0xd9, 0xe2, 0xff, 0x67, 0xe4, 0x29,
	0xc0, 0x51, 0x3a, 0x3a, 0xd9, 0x80, 0xee, 0x83, 0xf1, 0x0c, 0x86, 0x8c, 0x5a, 0xcc, 0x95, 0xde,
	0x3a, 0xfe, 0xd4, 0xf3, 0xb0, 0x83, 0x52, 0x4e, 0x5e, 0xc3, 0x79, 0xc8, 0x58, 0x5b, 0x16, 0x52,
	0x31, 0xf6, 0xc4, 0xf5, 0x41, 0xfb, 0x16, 0x2e, 0x82, 0xd6, 0x1e, 0x46, 0x70, 0xf2, 0x10, 0x10,
	0xe2, 0xb9, 0xd6, 0x74, 0x29, 0x27, 0x04, 0x4e, 0xfc, 0x35, 0x87, 0x78, 0xf8, 0x7f, 0xf2, 0x10,
	0xba, 0xb4, 0x74, 0xed, 0xf9, 0x38, 0x44, 0x59, 0x53, 0x39, 0x2d, 0xa7, 0x16, 0x9b, 0xf5, 0xfb,
	0x7f, 0x92, 0x40, 0xaf, 0x42, 0xc9, 0x85, 0xcc, 0x9b, 0xb5, 0xef, 0xca, 0xe5, 0xf2, 0xdb, 0xfb,
	0x5c, 0xd8, 0x4d, 0xbd, 0xbe, 0x62, 0xaa, 0x5c, 0x48, 0xc4, 0x82, 0x6d, 0x54, 0xcd, 0x37, 0x54,
	0x6f, 0x17, 0xeb, 0x9a, 0xe7, 0x68, 0x7f, 0xd0, 0xa2, 0x40, 0x7b, 0x49, 0x2b, 0x71, 0xe9, 0x1e,
	0x31, 0xea, 0xc5, 0xd1, 0x5b, 0x5e, 0x77, 0xfd, 0x2b, 0x7e, 0xf7, 0x27, 0x00, 0x00, 0xff, 0xff,
	0x3c, 0xe1, 0x7f, 0xd8, 0xe5, 0x03, 0x00, 0x00,
}
